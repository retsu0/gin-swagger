// Code generated by go-bindata.
// sources:
// config.yaml
// templates/api.gotmpl
// templates/config.gotmpl
// templates/parameter.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4f\x4b\xc3\x30\x18\xc6\xef\x7e\x8a\x97\x9e\xb6\x83\x9d\xe7\xde\x04\x15\x14\x94\x81\xbb\x6f\xaf\xed\xd3\x18\x97\x7f\x24\x99\xa2\x25\xdf\x5d\x9a\x6e\x93\x4d\xd1\x0d\xd9\xed\x6d\xd3\xdf\xd3\x5f\x9e\x44\xf1\xbb\x5d\xc5\xea\x8c\x88\x9d\x53\xb2\xe6\x28\xad\xe9\x1f\x89\xce\xc9\xb0\x46\x45\xb5\x35\xad\x14\x2b\x8f\xfc\x96\x28\xd8\x95\xaf\x51\x51\xd1\x75\x54\xce\xb4\xbb\x92\x9e\x52\x9a\x44\x68\xa7\x38\x22\x4c\x06\xa0\x14\x36\x6a\xa7\x8a\x35\x15\xd9\x0b\xc4\x4c\x2d\xba\x8e\x5e\xac\x34\x37\x52\x61\xca\xf1\x99\xca\x59\x5e\xa4\xf2\x11\xfe\x15\x7e\xca\xf5\x92\x05\x28\xa5\x45\x4a\x1b\xbe\x95\x0a\xf3\x41\xa8\xd8\xfe\xa0\xd8\x11\x85\x7e\x42\xd3\xa0\x99\x07\x87\x7a\x4f\x96\x43\x40\xac\xc2\x1b\x0b\x01\x7f\x17\xac\xb9\xee\x3f\x3e\x81\xdb\x8e\xc4\x37\xc5\x90\x43\x0e\x2d\x92\x9d\x3c\x61\x8b\x43\x7a\xbf\xa2\x6d\x03\x15\x76\x4f\xbd\x41\x2b\x8d\xec\x6f\xc3\x8f\x4d\x66\xe4\x18\xa9\xfb\x1e\xf8\xd3\x69\x48\x18\x05\xc3\x4b\xf9\x01\x1a\x39\x0e\x35\xab\x7e\x2c\x1f\x58\x63\x3c\x1e\xd0\xb5\xb7\x75\xf0\xf9\xc2\xee\xb9\x3b\xf6\xac\x11\xe1\xc3\xa1\x4d\x6f\x89\xdf\xfb\x96\x2d\x89\x48\x23\x05\xd3\x6f\x4c\x84\x31\x5d\x50\x4a\x07\x1e\x44\x79\x39\xbd\xdd\xce\x9b\x61\xc0\xa1\x02\x8e\x08\xda\x83\x4d\xf3\xef\x42\xe7\x5f\x95\xe5\x6e\x3f\x03\x00\x00\xff\xff\x82\x4f\xcf\x1e\x17\x04\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1047, mode: os.FileMode(420), modTime: time.Unix(1508518995, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x5f\x73\xdb\xb6\xb2\x7f\x26\x3f\xc5\x96\x93\xa4\xa4\x47\xa6\xda\x3e\x6a\xae\x1f\x52\x27\x4d\x7d\xeb\xa4\x1e\x4b\xb9\x7d\xb8\x73\xa7\x85\xc9\x15\x85\x1b\x0a\x60\x01\xd0\xb2\xc2\xe1\x77\x3f\xb3\x0b\x90\xa2\x64\xd5\x39\xc7\x0f\x32\x09\xec\x3f\xec\xfe\xf6\x0f\xd8\x88\xe2\x8b\xa8\x10\xba\x0e\xf2\xb7\x77\x37\x77\xe1\xb5\xef\xe3\x58\x6e\x1b\x6d\x1c\xa4\x71\x94\x14\x5a\x39\x7c\x72\x49\x1c\x25\x0a\xdd\x7c\xe3\x5c\x43\xcf\xda\xfa\xdf\xb9\x95\x95\x12\x35\xbd\xd8\xbd\x2d\x44\xcd\x8f\x4e\x6e\x91\x97\x9c\x91\xaa\xb2\x49\x1c\x47\x49\xa5\x6b\xa1\xaa\x5c\x9b\x6a\xfe\x34\xd7\xa2\x75\x9b\x9f\xfc\xba\x74\x9b\xf6\x21\x2f\xf4\x76\x5e\x49\x75\x49\xfa\x8c\x7c\x98\x37\x8d\xd1\xeb\xe4\xf9\x7e\xa5\x95\x2c\xe8\x29\x89\xa3\x4a\x2a\x2f\x08\xa6\x54\x5f\x45\x2d\x54\xa9\x99\x7a\xd0\x73\x24\xc6\xa0\xb3\xed\x0f\xbc\x6f\x77\xa2\xaa\xd0\xcc\xb7\xb2\x2c\x6b\xdc\x09\x83\xdf\xa6\x15\x8d\x4c\xe2\xa8\xd6\xd5\x91\x56\x2b\x4d\xdb\x58\x54\xf3\x5a\x57\xa6\x25\xef\x74\x9d\x11\xaa\x42\xc8\xdf\xe1\x5a\xb4\xb5\xbb\x61\xa7\xda\xbe\xef\xba\xc6\x48\xe5\xd6\x90\xbc\xfe\x3b\x81\xbc\xef\x89\x16\x55\xe9\x1f\x3c\xd3\xab\x2f\xb8\x9f\xc1\xab\x47\x51\xb7\x08\x8b\x2b\xc8\x27\xdc\xb4\xd7\xf7\x14\xb7\xa9\x1c\x4f\x3b\x15\x96\xc5\xf1\x7c\x0e\xf7\xba\x75\x68\xa1\xc4\xb5\x54\x68\x41\xd4\x35\xb8\x0d\x82\xf1\xcb\x7a\xcd\x6f\x6f\xef\x6e\xc0\xa2\x79\x94\x05\xe6\xb1\xdb\x37\x38\xb0\x59\x67\xda\xc2\x41\x17\x47\x17\x95\x54\xf9\x7b\x55\x49\x85\x93\xb3\xfd\xde\xa0\x11\x4e\x6a\xc5\x96\x41\x23\x08\x03\xf2\x2b\x42\xfe\x49\x6c\x09\x4c\x13\x09\x5e\x04\x0b\x36\x1f\x8c\x6e\x9b\x38\x8a\xba\x0e\xe4\x1a\xf2\xb7\xad\xdb\x68\x23\xbf\x62\x09\x7d\x4f\x2f\x40\xa4\xbf\x0a\x55\xd6\x68\x7e\x69\x55\x11\x87\x43\x45\xd1\x9d\xb6\x0e\x9e\x4b\xea\x07\x8a\xb8\xe7\x63\x17\x5a\xad\x65\xd5\x1a\xfc\x03\xeb\xfa\x37\xa5\x77\x0a\x50\x89\x87\x9a\x5c\xa0\xca\xc3\xb6\x85\x79\xbe\xc3\xba\xbe\xfc\x12\x68\xca\x46\x4b\xe5\x6c\x1e\xaf\x5b\x55\x40\x6a\xe0\xc2\xbb\x22\x3b\x23\x32\xdd\xa0\xa8\xdd\x86\x0c\x04\x22\x4f\x33\x78\xd0\xba\xce\xe8\xb4\xbb\x51\xef\xe2\x0a\x4c\xce\x66\xa6\xc9\x54\x59\x92\xc5\x11\xb9\x65\xa4\xcc\x3f\xbc\x5f\xa5\xc9\xdc\x16\x1b\xdc\x8a\xcb\x52\xda\x42\x3f\xa2\xd9\x27\x33\x2f\xbc\x70\x4f\xfe\xe0\xd7\x3e\x27\x59\x4d\x14\x8d\x74\xa4\x68\xe2\xed\x28\x5a\xb2\xa0\xcf\xf7\xb7\x00\x3e\x13\xe1\xaf\xff\xb7\x5a\x2d\x12\xaf\xe1\xcf\xd6\xd4\xc9\x5f\x13\xca\x15\x05\xfe\x2c\x25\x41\x22\x90\x7e\xbe\x61\x81\xf4\x77\x4c\xda\xca\x83\xc0\xfe\xc4\x80\x05\x40\x32\x0f\x09\x94\x13\x79\x32\x3b\xd1\xbb\x80\x24\xec\x5f\xfe\x94\xff\xe0\xb7\x7b\xfa\x29\xdc\x53\xfe\xdf\xcb\xdf\x3f\xa5\x54\x7a\xf2\xa5\x13\xae\xb5\xbf\xff\x36\x83\x37\xe3\xb9\xb3\x38\x8a\xfa\xec\x8c\x23\x7d\x74\x92\x19\xf8\x87\x00\xa7\x49\xd0\xb2\x8c\x80\x13\x47\x66\xf0\xfc\x91\x85\x2f\x79\x9d\xac\x5a\xf2\xf1\x4f\xed\xf2\x4e\x49\x97\x5e\x14\x59\xce\x5a\xb2\x80\xcb\x23\x53\x40\x5a\x4e\x3f\xbf\x08\xbf\xae\x56\x77\xb0\x09\x5b\xad\xc5\x12\xd6\xda\x30\xc1\x14\x36\xe1\x58\x24\x8c\x93\x98\x12\xc8\x43\xbb\x0c\xa0\xfd\xa7\xe3\x1e\x63\xf4\x24\xc3\xe8\x58\x9e\x94\x81\x74\xe0\x8a\x23\x83\xae\x35\xea\x45\x10\x86\x13\x9c\x22\xf0\x57\xbf\x4c\x0a\x07\x98\x84\xa0\x4c\x61\xe2\xa9\x16\x41\xe7\x3e\xcd\x42\xf4\xe9\x57\xae\xe1\x3b\xbf\x9e\x07\x61\x9e\xe7\x1c\x2c\x96\xbe\x82\x7d\x56\xe2\x51\xc8\x9a\x3c\x32\x83\x37\x9e\x39\x63\x89\x80\xb5\xc5\x17\x04\x30\xae\xa6\x0c\x04\x0f\x1f\xb7\x20\x7b\x88\x98\x54\x0e\xcd\x5a\x14\x08\x6e\x23\x1c\x6c\x5b\xeb\xe0\x01\x41\x6e\x9b\x1a\xb7\xa8\x1c\x96\x20\x15\x68\x53\xa2\x01\xa7\xa1\x31\xfa\x51\x96\x48\x82\x1e\x5a\x4b\x85\xd8\x42\xad\x2b\x59\x8c\x11\x7e\x5e\x81\x47\x8d\xa3\xaa\x2e\x0e\xae\xda\x87\x20\xfe\x27\x85\xf8\x59\xe4\x42\xe9\xbd\x13\x46\x6c\x2d\xf4\xfd\x0c\x1a\xff\x78\xd1\x75\x79\x98\x06\xfa\x3e\x3f\x2b\xcc\x33\x75\x1d\xd5\x4b\xe8\xfb\x0c\x2e\x44\x23\xf3\x7b\xb4\x8d\x56\x16\xa7\xa5\x98\x01\x59\x49\x25\xbf\xe2\x9d\x70\x9b\xb4\x11\x6e\x13\x72\x24\x1b\x0a\x48\x37\x42\x2c\x0c\x0c\xf9\x3d\x36\xb5\x28\x30\x3d\x7d\x27\xee\x19\x24\x5d\x32\x83\x64\x91\xcc\xe0\xf2\xc7\x6c\x06\x49\x4f\xaf\xfe\xed\xb4\xfa\x87\x36\x36\x29\xf7\x93\xe6\x77\xd6\xf7\x6c\xf0\x09\x7f\x1a\x76\x87\x98\xcc\x42\xc2\x71\xa7\xa2\x40\xcc\xc0\xe9\x2f\xa8\xa8\x32\x7a\x93\x67\x70\x18\x29\x2c\xfc\xef\xff\x9d\x24\x5b\x36\x74\x15\x3a\x3b\x72\x53\xa5\xdc\x21\xaa\x4f\xb8\x4b\xb3\x61\x31\xff\x6c\x31\xe5\x5e\x87\xbe\xd6\xa5\xd9\xf1\xde\x41\x4b\x7e\xcb\x83\xc7\xad\xa6\xb2\x43\x64\x31\xe5\xce\xd4\x8a\xef\xae\x40\xc9\x1a\xba\x18\xc2\x1f\x9d\xff\xcf\x19\x3c\x72\x87\x62\x18\x4d\xc9\x0f\x74\xf4\x37\xd1\xf9\x98\x8d\x3b\x7d\xec\x7f\xe3\x28\xb8\x74\x71\x05\x6f\xfc\xc9\x3a\x3f\x2b\x2c\x02\x27\xd1\x9c\x05\xab\x67\x3c\x0f\xb3\x69\x8b\x87\xab\x10\xb6\xa1\x95\x72\xfb\x64\x0c\x2b\x84\xfc\x23\xba\x8d\x2e\x21\xf9\xf0\x7e\x95\xc0\xbf\x2f\xf5\xd4\x89\x9c\x1b\xca\x51\x47\xb2\xe9\x38\x8c\x49\x55\xe2\xd3\x0c\x5e\xb9\x7d\xc3\xc3\xd8\xb5\x56\xb6\xdd\xa2\xfd\x88\xa5\xe4\xee\xc5\x49\x27\xd7\x81\xb2\xef\x67\x21\x03\x92\xae\x23\x26\x7e\xe0\x85\x2c\x8b\xc7\xac\x39\x3b\xfc\x8c\xc5\x9c\xb1\xd5\xf9\x11\xe9\x15\x1f\x87\xcd\x5f\x5c\x41\x7a\x72\xa4\x8c\x66\x76\x4f\x67\xb1\x68\x8d\x74\xfb\x77\x34\xed\x49\xf6\x30\x1b\xbc\x3c\xb3\x3e\x30\x85\x98\x0c\x24\xc0\xf5\xe3\x55\x89\x6b\xe2\xe4\xf3\x9c\x97\x3b\xb8\x73\x9c\xe2\xf0\x6f\x66\x1b\x25\x71\x73\xc7\x3b\xa3\x1b\x9b\xf3\x68\x91\x84\x71\xdc\x33\xf1\x99\x56\x43\xda\x2c\xae\xc6\x14\x8a\xb9\xea\x1f\x6f\x5f\x5d\x41\x92\xf8\xca\x7d\xb2\x01\xc7\xe3\xf4\x3f\x5b\x10\x38\x58\xf7\xa8\x9f\x21\x32\x71\x6f\xdf\x73\x38\x80\x73\xd1\x9b\xcb\x0b\x29\x69\x9e\xe0\x64\x59\xe8\x06\x2d\xef\x3c\x43\x89\xa5\x3d\xef\x76\xa6\x7a\x01\x1b\x4c\x3a\x41\x07\x37\xbe\xa0\xf6\x7d\x18\x45\x7d\xbb\x1a\xcc\x5f\x1c\x3b\xc6\x77\x4a\xfa\xcd\x7c\x1c\x3c\xb4\x5e\x38\xde\x29\xf8\x5f\x72\xc3\x89\xcc\x71\xc6\x8e\x5e\x4c\x2f\x9e\xd0\xc7\x6c\x3d\x4f\x33\xc9\xe1\x6f\xca\xca\xbb\x2e\xa4\x77\xdf\xa7\x93\x56\x72\x72\x8f\xa2\x35\x72\x21\x1c\xb5\xaf\x9f\x43\xbb\xbd\xa5\x6e\x7b\xbe\x31\x0e\xa5\xff\xec\x2e\x15\xd2\xf1\x76\x16\xba\x94\xb7\x38\xb4\x1a\x6a\x1e\xc3\xe5\xea\x7c\x23\xe7\x95\x71\x2a\x0a\x75\x3f\xd4\xff\x38\xf2\xad\x06\x2e\xae\xf9\x7f\x1c\x11\x2f\x1a\xb8\xf0\x63\x09\xbf\xc4\xd1\x4a\xba\x7a\x18\xcd\xe3\xe8\x7f\xd0\x58\xa9\x87\x6e\x19\xec\xf8\x84\x3b\x52\xc4\xe9\xc9\x47\xb0\x20\x40\xe1\xee\x4c\x77\xf3\xa4\xa9\x7d\x2c\x0e\x0d\xed\xd8\x8c\x6f\xb7\x2f\x92\xda\x71\x8b\xf9\xce\xb3\xe6\xef\xf0\xa1\xe5\x5e\x4e\xf7\xf2\x7c\x89\xee\xa3\x2e\x87\xe6\x55\xa3\xb0\x48\xef\x61\xe0\x16\x8d\xe4\x56\xf1\xf6\xee\x86\x18\xbc\x2f\x16\xcf\xdb\xee\x63\x31\x1b\xe5\x13\x20\xdf\x49\xcb\x83\xee\x60\xef\x98\xd5\x47\x06\x73\x1a\x79\x82\x41\x26\xad\xb0\x13\x17\x90\x74\x1d\xe4\x37\x6a\xad\x73\xef\xd5\xbe\xe7\xdb\x46\x70\xea\x74\x7f\xf0\xb3\xa7\x20\xbb\xe7\xf3\x50\x9d\x81\xbf\x4f\x00\x05\xe9\x70\x67\xa4\x91\xaf\x64\x2f\x6c\x75\x89\xec\x9c\x67\xbe\x61\xbe\xfc\x1e\x2b\x69\x1d\x9a\x94\xc7\x26\x9f\x00\xbe\x5f\xce\xa8\x47\x67\xa3\x36\x8b\x0e\xfc\x17\x05\xfa\x57\xf9\x69\x72\x85\x4f\xee\x17\x6d\xb6\xc2\x39\x34\xb0\x93\x6e\x03\x4a\x43\xa1\x6b\x6d\x2c\x7f\x99\x20\xef\x8f\x04\xe9\x1b\x5a\x39\xe2\xe9\x82\x1f\xaf\x99\x65\x01\xce\xb4\xd8\x67\x3e\x2e\x79\x00\xe0\x15\xbc\x99\x40\x90\x4c\x7f\x5b\x96\x66\x31\x0e\x04\x43\x54\xca\xd2\xa0\xb5\xe4\xc1\x00\x90\x40\xf2\xfc\x64\x14\x68\x14\xe5\x4a\x6e\x51\xb7\x6e\x01\xf0\xe3\x0f\x70\x01\x4e\x6e\x91\x0a\xb6\x56\x25\x51\xfc\x61\xa4\xc3\x91\xe4\x0c\x45\x1f\x1f\xa1\x6e\xbc\x8b\x0f\xd0\x60\x2f\x4f\x94\x9f\xb9\xb5\xdb\xc7\x22\x5c\x26\xf6\x07\x4f\x8f\x74\xe1\x1a\xf2\x75\x8c\x6b\x3c\x15\x37\xbd\x59\x7e\x7d\x76\xb5\x9c\x4a\x26\x7f\x86\x82\x21\x1a\x19\xb2\xf4\xbe\x55\x60\x5a\x75\x5c\x2a\xe8\x22\xe8\x60\x27\xeb\x1a\x6a\x82\x85\x02\xad\x00\xa5\xdb\xa0\xf1\x77\x42\xed\xff\x2f\xa1\xc4\x06\x55\x49\x33\xb3\x56\x24\x8e\xa4\x84\xcc\x6d\x84\xa5\x1b\xa3\xd3\x21\xbd\x87\x0f\x18\x82\x73\x35\x23\xcd\x69\x06\x68\x8c\x36\xe4\x22\xc2\x04\x81\x7c\x9d\x26\x5c\x03\x54\x05\xdf\xbf\xb6\x70\x09\xaf\xed\xf7\xa4\x5e\xf8\xb8\xc2\x6b\x9b\xcc\x40\xf8\x54\xa1\x87\x90\x13\xf4\xe8\x4d\x67\x04\x64\x1c\x13\x11\x9c\x9d\xdf\x28\x1e\x18\x90\x8d\xa7\x78\x0c\x7e\x18\x78\x6e\xf9\x98\x6f\x55\xc9\xe8\x4a\x39\x0a\xdf\x20\x5a\xdd\x2e\xd3\x51\xc1\xea\x76\x79\x8d\xc6\xfd\x22\xbd\x51\x87\xd5\xdf\x70\x4f\x8b\xc3\x3d\x60\xb9\x69\x5d\xa9\x77\xca\x3b\xb7\x32\xa2\xc0\x75\x5b\xd7\x7b\xb0\xc3\xc6\x71\x1c\x4e\x9d\x36\xf0\x4f\x3d\x77\x6a\xe6\x48\x13\x3e\x95\xe6\x3f\x8b\xe2\x4b\x65\x74\xab\x4a\x1a\xc3\xc7\xb8\xff\x21\xdd\x66\x29\xab\xe1\xea\x7f\x0e\x05\x9c\xca\xcb\x9b\x0f\xab\xf7\xf7\x1f\xfd\x87\x00\x8a\x8b\x68\x9d\xde\x0a\x27\x0b\x51\xd7\xfb\x78\x2c\x41\x65\x0e\xab\x0d\x1e\x58\x0f\xe8\xa1\xb9\x5e\x8c\x72\xfc\x17\x5a\xfe\xea\x75\xc6\x01\x03\x8a\x76\xf8\x30\xfa\x60\x3e\x87\x1b\xf7\xbd\x85\x46\x5b\x2b\xa9\xd8\x39\x0d\xba\xa1\xa9\x8f\x2c\x60\xa4\x81\x50\x7b\x50\xed\xf6\x01\xcd\xc1\x97\xe4\x3b\x3f\x1b\xee\x36\xb2\xd8\xb0\x4d\x6c\xef\x13\x16\xad\x43\xd0\x0a\xe1\x61\xcf\xff\xc4\x9a\x4a\x57\x50\x1c\x8e\xb0\x11\x16\x1e\x10\xd5\x41\xa0\x6d\x8b\x02\xad\x65\x8b\xcf\xe0\xf9\xd8\xa3\xe9\xc8\x96\xe7\x79\xf8\xd2\xc1\x41\x9b\xc4\xce\xca\xea\x9a\xbf\x52\x6c\xc5\x17\x4c\x8b\x8d\x50\xa0\x6d\xbe\x64\x0f\xcd\xe0\xc7\x8c\x29\x94\xa8\xf3\x4f\xda\xc9\xf5\x3e\x65\xfa\x19\x84\x4f\xdb\x79\x70\x29\x65\x76\xa5\x87\xaf\x29\x84\xef\xff\xba\x64\x4a\xaa\x3c\x07\x3c\x10\xaa\x53\xa2\x45\x63\x48\xa7\xc8\x39\x07\x39\x55\x68\x69\xbc\x8f\x45\x93\x15\xae\xb9\xef\x8d\xf1\x65\xf7\xba\xd6\x36\x94\xb4\x01\x77\x68\x4c\x1c\xbe\x4c\xc4\x51\xb8\xc1\xad\xd5\xe1\x0a\x37\x7a\x81\x98\x82\xe6\x35\xab\x3d\xa3\xf7\xac\xd0\xb0\xa6\x64\x1d\xf7\x14\xbe\x47\xb9\x5d\xc0\xda\x5d\x55\x3a\xfe\x57\x00\x00\x00\xff\xff\xc2\x38\x68\x59\x34\x18\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 6196, mode: os.FileMode(420), modTime: time.Unix(1508519329, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfigGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcf\x6f\xdb\x20\x18\x3d\x9b\xbf\xe2\x9b\x0f\x8d\x3d\xd5\x4e\xd5\x53\x55\x29\x87\xac\x3f\xb4\xaa\x39\x44\x4b\xb6\x9d\x09\xfe\xb0\x51\x30\x58\x80\x53\x45\x6d\xfe\xf7\x09\x6c\xb7\x4e\xd2\xed\x30\x22\x45\xe2\x03\xde\x83\xf7\xde\xe7\x86\xb2\x2d\x2d\x11\x5e\x5f\x21\x9f\x2f\x9f\x96\xfd\xf4\x70\x20\x44\xd4\x8d\x36\x0e\x12\x12\xc5\xbc\x76\x31\x21\x51\x5c\xea\x66\x5b\xe6\x42\x4d\xa9\x44\xe6\x2a\x5d\x53\x3b\xdd\x0a\x55\x36\x42\xe5\xbb\xeb\x98\xa4\x84\x30\xad\x6c\x38\x54\x20\xa7\xad\x74\xf3\xa2\x30\x68\x2d\xcc\x20\xbe\xbd\xb9\xba\xb9\x0a\x9b\xa6\x53\xb8\xd3\x8a\x8b\x12\x0a\xe4\x42\xa1\x05\x57\x21\xb0\xae\xa4\x1b\x27\xb4\xb2\xc0\xb5\x09\xe5\xf9\xf2\x09\x2c\x9a\x1d\x9a\x9c\xb8\x7d\x83\xc3\x51\xeb\x4c\xcb\x1c\xbc\x92\x68\xe0\xf8\x18\xd6\x19\xa1\x4a\x12\xdd\xe3\xa6\x2d\x61\x3c\x36\x5a\x4b\x12\x3d\x29\x8b\xac\x35\xf8\x7d\xbd\x5e\x8e\xeb\xf3\xd6\x55\xf7\xc2\xd2\x8d\xc4\x62\x5c\x5f\x2f\x56\x77\x68\xdc\xa3\x90\x78\xc2\xb0\x5e\xac\x9e\x71\x3f\x5a\x78\x5f\xf9\x8d\x52\x3e\x2b\xfd\xa2\xde\x01\x7b\x2c\xbd\x45\xf5\xf3\xc7\x62\xd8\x78\x08\x7a\x2c\xa9\xb1\x08\x8d\xff\xb7\xbd\x12\xad\xa1\x5e\x09\xe0\x46\xd7\xc0\x74\x5d\x53\x55\x48\xa1\x10\xb8\xa4\xa5\xcd\x09\x6f\x15\x83\x84\xc1\xd7\x4e\x90\xb4\xc3\x48\x52\x40\x63\xb4\xf1\xc2\x0c\xde\x3c\x4a\x5a\x26\x71\xe1\xc5\x88\x2f\x21\x7e\x50\xfe\x3e\x10\xe6\x20\x75\x59\x0a\x55\x02\x55\x05\x34\x8d\xd1\x1c\x6a\x74\x46\x30\x9b\xc7\x69\xfe\x4d\x6b\xf9\x8b\x9a\xe4\x82\xe5\x41\xca\xf4\x14\x93\x76\xd2\x7b\xd4\xc1\x05\xa7\x41\x0a\xeb\x50\x81\x56\x97\x80\x79\x99\x43\x70\x1e\xb4\x81\xab\x3c\xfc\xc2\xdc\xe3\x93\x28\xba\xef\x72\x92\x1c\xe7\x25\xcd\x57\x41\x9d\x9e\x7c\xa8\x9e\xd2\x8b\xde\xc7\xac\x72\xae\xf1\x97\x58\xa1\xd9\x09\x86\xa0\x95\xdc\x83\x77\xf7\xe4\x15\x63\xe3\xcf\xd0\x9c\xb4\x19\x43\xe3\x32\x2e\x24\x7a\xb4\x25\x75\x95\x7f\xcf\x7a\xb1\x02\xef\x3f\xf8\x05\x68\x2d\x16\xf0\x52\xa1\x0a\xb1\xf4\xda\x79\xb4\x55\xff\x9e\xa3\x7b\x8f\x72\xf3\x29\xdb\x16\xf7\x9f\x92\x3d\xe3\xfe\x7f\xb8\xfa\x24\x9e\x51\x15\x5d\x02\xb3\x17\x94\x32\xdb\xfa\x4c\x7a\xc2\x3e\x97\x40\x5b\xa7\x6b\xea\x04\x83\x69\xfe\xb1\x03\x0c\x5a\xdd\x1a\x86\xb6\x27\x1b\xa9\x78\x16\xed\xbf\x32\xd2\xd6\x55\x27\x5c\x55\xe8\x6c\x2a\xe5\xbf\x18\xc6\x8d\x78\xae\x9c\xef\xa0\xac\x35\xb2\x73\xdc\xc1\x7b\x4b\x05\xb9\x9c\x86\x1d\x95\xa2\xa0\x0e\x41\x7b\xc2\x6b\x08\x27\xec\xa7\xaa\xf5\x47\x47\x24\x7d\x1b\x11\x12\x09\x0e\x5f\x8e\x33\x03\x17\x17\x90\x1c\xf9\x0a\xb3\x19\xc4\x31\xbc\xbd\xc1\xd8\x82\xae\x9a\xfa\x26\x8c\x0c\xba\xd6\x28\xe0\xb5\xcb\x1f\x7c\x67\xf2\x24\x9e\x64\xd9\x51\xd8\x26\xa1\xfd\xfa\xea\x10\x8a\x09\xd4\xad\x75\xb0\x41\xb0\x0d\x32\xc1\xc5\x10\x85\x49\x96\x1d\x05\x7f\xc6\xa9\xb4\x38\x89\x53\x12\x1d\x08\x19\xf8\x94\x90\xe4\xe0\x3f\x2d\x3b\x51\xdf\x02\x77\xb3\x52\x93\x3f\x01\x00\x00\xff\xff\x3e\x82\xd5\x89\xef\x05\x00\x00")

func templatesConfigGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfigGotmpl,
		"templates/config.gotmpl",
	)
}

func templatesConfigGotmpl() (*asset, error) {
	bytes, err := templatesConfigGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/config.gotmpl", size: 1519, mode: os.FileMode(420), modTime: time.Unix(1508518995, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x73\xdb\x36\x12\x7f\xb6\xfe\x8a\x2d\xaf\xcd\x90\x39\x99\xca\xf5\x3a\x7d\xd0\xd5\x9d\x69\x1c\xa7\xf1\x35\x4d\x72\x71\x93\x3e\x64\x32\x2d\x24\x42\x12\x1a\x12\xa4\x01\xd0\xb6\x4e\xc3\xff\xfd\x66\x01\xf0\x03\x14\x44\x4b\x8e\x7b\xed\xf5\x9a\x97\x88\xf8\x58\xec\xfe\xb0\xd8\x2f\xc0\x9b\x0d\x24\x74\xc1\x38\x85\x40\xa6\x6c\x4e\x0b\x22\x48\x76\x45\x52\x96\x10\x95\x8b\xa0\xaa\x46\x9b\x0d\xb0\x05\xe4\x02\xe2\xef\x19\x3f\x57\x34\x93\x10\x7f\x4f\x6e\xcc\x2f\xd3\x3f\x27\x19\x4d\xd9\xbf\x29\xc4\x2f\x48\x46\xa1\xaa\x2e\xf0\x63\x7a\x02\x8c\xab\x2f\xbf\x08\x53\xca\x43\x43\x85\xf0\x04\x42\x9e\x2b\x88\xcf\xe5\x37\x42\x90\x75\x64\x3f\x9f\x11\xf9\x84\xc9\xb9\x60\x19\xe3\xb8\x70\xd4\x0c\x3b\xe7\x8a\x8a\x05\x99\xd3\xb6\xe9\x42\x09\x4a\xb2\x08\x7f\xbe\x28\xd3\x94\xcc\x52\x5c\xf3\xe1\x66\x03\x94\x27\x50\x55\x9b\x0d\xc4\x6f\x49\x5a\xd2\xb3\x9b\x42\x50\x29\x59\xce\xa1\xaa\xa2\x68\xd4\x8c\xb0\x42\xb5\x12\x55\xd5\x88\x2d\x80\x0a\x81\x5c\x5b\xf1\x69\xd3\x8d\xdc\xc7\xaf\x88\x5a\x41\x55\x8d\x61\xb3\x81\x42\x30\xae\x16\x10\x7c\x76\x19\x40\xfc\x3c\x9f\x13\x65\xd6\xd0\x9d\x5e\x34\x74\x4f\x77\xbd\xe8\x1f\x7a\xb9\x4f\x4e\x80\xb3\x14\x36\x23\x00\x41\x55\x29\x38\xb6\x8e\x2a\x0f\xab\x1d\xc8\x7d\xac\xda\xee\x7b\x62\xb5\xa1\x77\x38\xa3\x6f\x38\xbb\x2c\xe9\x10\xaf\x9d\x11\x87\xb1\xfb\x5b\x6b\xd0\x81\x48\x9c\xf1\x32\xdb\x01\x01\x76\xfd\x4f\xc9\x6e\xf4\xd7\x4a\x74\x08\x10\xed\xaf\xda\xce\x58\x10\x58\xce\x5f\x21\xc7\x8a\x5d\xd1\xc0\x0c\xb1\x47\xf2\x39\xe5\x4b\xb5\xda\x79\x24\x4d\xb7\xb5\x28\x35\x80\x1d\x2c\x37\x1b\x9a\x4a\x5a\x55\x41\xb0\xd9\x50\x9e\xec\x09\xae\x0b\x47\xd8\xc5\xa3\x0f\x87\x5e\x6d\x6b\x4a\xd4\x45\xd0\xf4\x9e\x96\x52\xe5\xd9\xd3\x5c\x64\x44\x29\x2a\xa0\xaa\xe2\x0b\x25\x18\x5f\x86\xed\x60\x73\xda\x5a\xa1\x6f\xc5\x56\x8b\x54\x83\x45\x6e\x06\xc1\xaa\xbb\xff\x58\x60\xb5\x42\x1f\x04\xd6\x2b\x4d\x97\xfb\xa1\xb2\x9d\x7f\x1c\xa0\x7e\xde\x6c\x5a\x89\x7f\x3e\x4c\xab\x18\x67\x59\x99\xed\x3c\x80\xd8\x69\xb8\xa1\x97\x10\x5f\x5c\x93\xe5\x92\x8a\x1f\xd6\x05\x85\x80\x71\x45\x97\x54\xe0\x79\x3e\xe7\xaa\x61\xe7\xbe\x61\x1d\x5a\x97\x99\x75\x53\x89\xf0\x2d\xd2\x9c\xb4\x6c\x7c\xf9\x45\xe8\xc3\x78\x78\x57\xa2\xfa\x84\x1a\x4c\xf4\xd7\xd9\xcd\x3c\x2d\x25\xbb\xa2\x4d\xf3\xa1\xc7\x76\x00\x60\xd3\xf9\x7f\x07\x70\x8d\x49\x0f\xe0\xba\xf9\x30\x80\xcb\x54\xb1\x22\xa5\x2f\x17\x3b\x30\x6e\xfa\xef\x0f\x38\x8d\xc4\xc7\x00\xd0\xe1\xf9\x20\x61\xd1\x29\x0f\x47\x19\xf7\xa9\x19\x1f\x17\x84\x1c\x02\xcb\xc1\x9e\xa1\xe5\xfd\x2f\x57\x41\x8d\xcb\xde\x50\xd6\xff\x37\x71\x4a\x21\xf2\x82\x0a\xb5\xee\xa5\x44\x9d\x00\xef\x5c\x36\x11\x8c\x81\x56\xd1\xac\x48\x89\xda\x15\xe4\xc4\x66\x94\x1b\x25\xfa\xe4\xf3\x6d\xa6\xe9\xd7\x1a\xab\x77\x10\x65\x0e\x36\x9b\x66\x8f\xaa\x2a\x30\x0d\xf6\xdc\x9a\xf1\xba\xd5\x87\x6e\x03\xe1\x18\x16\x7a\xa4\x1c\x46\xca\xc3\xb7\xde\xfe\xbe\xe0\xbe\x2c\xb2\x2b\xf8\x71\x2f\x2c\xac\xd1\x9e\x31\x9e\x14\x35\x54\x7a\x7e\xb0\x33\x82\x6c\xd7\xc0\x59\xc6\x2a\x8d\xae\x88\x40\x1d\xb8\x22\x82\x63\x2e\x13\x9f\xae\x58\x9a\x78\x22\xd9\xd7\x3a\x92\xfd\x36\xd7\x76\xad\xaa\x46\x8b\x5c\x40\x9b\xe3\x9a\x59\xcf\x88\x7c\xdb\x6c\xa0\xac\x5b\x4f\x73\x7e\x45\x05\xee\x90\x6d\xf0\x6d\x1d\x12\x3f\xe7\x09\xbd\x79\x4b\xec\xa7\xb5\x94\x3f\xb9\xba\x7a\x2b\x9f\x6f\x71\xf7\x05\xe1\x4b\xba\xd7\xf0\x53\xbd\x63\x7d\x41\xea\x4d\x42\xd4\x75\x6f\x2d\xca\x4e\x2a\xd3\x13\x90\xd7\x64\x19\x5f\x14\x29\x53\x8f\xd7\x46\xb4\x70\x2f\x86\xb7\xed\x47\x8d\x5b\x9a\xd2\x39\x42\x69\xa8\x61\x58\x63\xb8\xf1\xa9\x4d\xbd\xa5\x66\x32\x58\xc6\x8f\x0d\x8c\x8d\x1c\xa8\x81\xfd\x5d\x69\x3a\x6f\x65\x75\x5c\x9f\xae\x0e\x22\x0d\x19\xe3\x4d\x6f\x17\x17\x65\xb0\xe7\xb4\x73\x66\xba\xa7\x26\x17\x32\x3e\xe7\xfa\x1c\xa0\xb6\x85\xed\x6a\x3b\xd3\x3e\xd3\xed\xd8\xdd\xa0\x9d\xd6\x68\x6d\xb0\x9f\x0e\x21\x8b\x0e\x7e\x2d\x6c\xdb\xba\x7b\x07\xf8\xac\xe5\x88\x5f\x11\x21\xe9\x1f\x17\xb5\xfd\x91\xb1\x3a\x75\x3b\x0c\x86\x9e\x35\x6d\x76\x29\xf3\xd1\x3f\x19\xbb\xdc\x90\x7b\x3e\xf6\xb1\x7b\x27\x40\x8a\x82\xf2\x64\xaf\x8d\x7a\xbd\x2f\x56\x5d\x1b\x5d\x90\xf9\x07\x62\x0c\x56\xfc\xca\xfe\x46\x91\x26\x13\xf8\x61\xc5\x24\x2c\x58\x4a\xe1\x9a\x48\x58\x52\x4e\x05\x51\x34\x81\xd9\x1a\xd4\x8a\x6a\x9b\xb3\xa4\x02\x54\x9e\xa7\x31\x8e\x3f\x4b\x98\x62\x7c\x09\xaa\x99\x97\xb1\xe5\x4a\x41\x21\xf2\x2b\x0a\x8b\x52\x69\x52\x2b\xca\x61\x9d\x97\x20\xe8\xb1\x28\xb9\x43\xa9\x5e\x02\xe6\x79\x96\x11\x9e\x8c\x46\x2c\x2b\x72\xa1\x20\x1c\x01\x04\x9c\xaa\xc9\x4a\xa9\x22\x40\xbc\x83\x25\x53\xab\x72\x16\xcf\xf3\x6c\xb2\x64\xfc\x78\x99\x73\x36\xc7\x5f\x41\xbf\x33\x3f\xce\x0b\xca\x49\xc1\x26\x46\x51\x07\x06\xd4\x8e\x7b\x60\x88\x28\xb9\x62\xd9\x1e\x23\x26\x19\x4b\x92\x94\x5e\x13\x31\x34\x18\x25\xef\x77\x0b\xaa\x64\xf9\x48\x4b\x65\x81\x99\x90\x82\x69\xa9\xa5\x12\x8b\x4c\xed\x24\xa6\x7b\x03\xab\x8e\xc6\x0f\xc5\x4f\xe8\x82\x94\xa9\x3a\xd7\x40\x4a\xe3\xde\x9c\x83\x58\x6b\x63\x47\xb1\xed\xdc\x4f\x3f\xd0\xf5\x18\x3e\xbd\x42\x0d\xc2\x53\x12\x3b\x44\xb0\x17\x8f\x4f\x8f\x9e\x1d\xde\xa3\x1a\x69\x85\x7a\x5c\x4a\xc6\xa9\x94\xcf\xf3\x25\x9b\xe3\x3c\x22\xe7\xc4\x29\x66\x02\xbd\xa1\xf3\x52\x51\xa9\xf5\x62\x9e\x0b\x0a\x29\x0e\x86\x7c\xa1\x5b\x04\xc5\x13\x96\x20\x31\x91\x97\x8a\x22\xfd\x22\x67\x5c\xc5\xa3\x45\xc9\xe7\x7b\xac\x10\x2e\x00\x47\x86\x73\x75\x03\x0f\x97\x8c\xa3\x17\x51\xf4\x46\x35\x31\xb7\x20\xba\x0a\x3a\x86\xc2\xfc\x7c\xe8\x25\x63\xc6\x35\x02\x46\xf0\x90\x14\x2c\x7e\x4d\x65\x91\x73\x49\x23\x40\xca\xcf\x08\x4f\x52\x2a\x9e\x22\x63\x9b\xd1\x91\x35\x97\x9a\xcf\xad\xe5\x23\x1c\x71\xd4\x67\x62\x32\x69\xcf\x84\x65\x67\x21\xf2\x0c\x04\xbd\x2c\xa9\x54\xa3\xa3\x23\xdb\x3a\x3d\x81\x07\x43\x7c\x56\xa3\xa3\x23\xeb\x00\xcc\x8c\x18\x7d\xf6\x6b\x43\x06\x99\x89\x46\x47\x47\x7d\x1b\x7f\xa4\xe7\xbc\x9c\xfd\x82\xd3\xa8\x10\x71\xf8\xd0\xda\xfa\xd3\x3c\x2b\x72\xc9\x14\x3d\xc3\x6f\x9c\x7b\x54\x88\x7c\x96\xd2\x0c\x87\x22\x12\xaf\xcc\xa7\x26\x72\xf4\x03\x53\x29\x9d\x02\x04\x6f\x78\x21\xf2\x39\x95\x52\x67\x13\x67\x5c\x31\xb5\x8e\x83\xb1\x1e\x74\xa1\x88\x2a\xe5\x14\x18\x57\xa1\x59\x36\x3e\xcd\x13\x1a\x46\x91\xe9\x7f\x42\x15\x61\xe9\x14\x6c\x9f\x5e\x39\x34\x7d\x28\xdd\xd1\x5c\xdd\xc4\x3f\x0a\xa6\xa8\x88\x9f\x51\x92\x50\x11\x46\xf1\x05\x55\x61\xa0\x11\xe6\xea\x18\x3d\x0a\xc6\xdb\xa4\x28\x52\x66\xdc\xce\xc4\x72\xfd\xd7\x5f\x64\xce\x83\xa8\x26\xf3\xcf\x8b\x97\x2f\x42\xdb\x15\x1b\xbe\xc6\x60\xbf\xf5\x20\xb3\x95\x23\xb3\x72\xab\xe5\xd8\x21\x0b\xed\x65\x11\xd3\x5d\x2a\x65\x13\x17\xa4\x24\xaf\x99\x9a\xaf\x00\xa7\x69\x69\x35\xea\x73\x22\x29\xa0\xa5\xb3\x6b\xbf\xc8\xad\x08\xd3\x9a\xc1\x6f\x66\xb9\x50\x3f\x32\xb5\x32\x03\xc2\x66\x3e\xd2\x4c\xcc\x89\x9f\x3a\xd2\x34\x23\xc6\x66\xb1\xc7\x79\xb2\x8e\x8c\x00\xd5\xc8\x98\xfb\x01\xfd\x81\x79\xce\x15\x61\x5c\x02\x49\x53\x7d\x10\x67\x79\xc9\x93\x46\x27\x73\xa1\x1b\x37\x1b\x58\x95\x19\xe1\xce\x89\x46\x57\xa8\xc1\xc6\x35\xd4\xba\x60\x73\x92\xa6\xda\x83\x48\x0a\x44\x50\xc8\x67\x48\x9a\x26\x46\xb5\x89\x91\xdc\xaa\xe6\x68\x32\xc1\x69\xd6\x0e\x4e\xf5\x7a\x54\x51\x21\xb5\xbf\xb2\x4b\x8c\x14\xc6\x0a\x43\xec\x4b\x25\xca\xb9\x82\x8d\x6b\x1a\xdb\x63\xf6\xd0\x6e\xd5\x13\x8a\xd9\x70\x61\x23\x12\x5c\x62\xab\xc5\xa9\xec\x21\x97\x4c\x50\x6b\x38\xeb\xaf\x29\x28\x51\xd2\xfe\x58\x5b\x16\x31\x43\xed\xc7\xb4\x8e\x8b\xfb\xc5\x13\xa8\xaa\xaf\xc0\xa9\xef\xb7\x1d\x5b\x84\x4d\x41\xcb\x12\x36\x1f\x1e\xc2\xcd\xa8\xaf\x7b\x84\x9b\x8e\x2d\xc2\x4d\x79\xc3\xd2\xb6\xdf\xf0\x72\x31\x35\x77\x63\xdd\x01\x1e\x79\x4d\xcd\xb7\x91\x18\xcc\xb7\x9d\xdb\xe9\xf6\x48\xe4\x4c\x65\xdc\x9d\xda\xe9\xee\x4f\xb5\xf5\x53\x33\xd1\x7e\x4c\x6d\x70\x53\xf7\x78\x38\x6d\xee\xbe\x0c\xa3\xfa\xb3\xe1\xb3\xee\xf4\xb0\xd9\x9d\xc7\xb8\x33\xaf\xed\xec\xcf\xeb\x5d\xb7\x01\x98\x06\xbf\xda\x74\x22\xe4\x11\xc0\xb9\x15\xa6\xd3\xda\x9f\xe0\x49\xdd\x46\x00\x6d\x2b\x98\x66\x43\xc7\x33\xb8\x4f\xef\x19\x91\x36\x86\x30\x94\xec\xc7\x74\xbb\x7a\xd3\x0e\xeb\x86\x13\x0f\x27\x4d\xfa\xa7\x8b\x4b\x17\xf3\x15\xcd\x88\x0d\x44\xda\x03\x7b\xfe\xc4\x06\x13\xf7\x76\x6b\xf6\x94\xa5\x54\x1f\xf1\x43\x2e\xd2\x6c\xe6\xd1\xad\x02\xf8\x03\x95\x3e\xa7\x46\xac\xf8\x5c\x3e\x26\x92\x22\x09\x77\x95\xde\xa0\x9a\x91\x81\xc5\x3b\xe1\x98\xa9\x73\x55\xa3\x91\x27\x3e\x18\x30\x7b\x4f\x45\x9e\x9d\xaa\x1b\x58\x52\x65\xe2\xa9\xc2\xb1\x86\xda\xdc\x62\xf3\x92\x71\x6d\xe0\xe9\x4d\x1d\x46\xdd\x4e\xd4\x13\xc0\x0c\x05\x4a\xe8\xd7\xcc\xea\x63\xf8\x09\x1d\x24\x3a\xa6\x6f\xd1\x3b\x9b\x56\xf4\xbd\x36\x3e\xb2\xf1\x49\x38\x44\x2e\xea\x16\xb7\x74\x64\xd9\x46\x33\x30\xcb\xd5\x0a\x30\xbc\x91\x7a\x7b\xea\xa0\x5e\x02\xa9\xe3\xa6\x31\x30\x05\x44\xca\x32\xd3\x81\x26\x51\x98\x70\x14\x29\xbd\xc1\xd4\x85\x2f\x25\x30\xfc\xca\x28\x57\x40\xc0\x56\x95\x70\x17\x43\x13\x61\xc7\xaf\xe9\x92\x49\x25\xd6\x91\xc9\x7d\x31\x64\x31\xca\x87\xac\xa0\x33\x94\x9a\x00\xe8\x50\x58\xe2\x62\xd7\x2c\x4d\xa1\x94\x14\xb1\x27\x3a\x29\xca\xa8\x5a\xe5\x09\xa0\x33\x94\x06\x74\x9d\x35\xbf\xa6\x73\xca\xae\xa8\xa8\xd5\x6c\x10\x05\xe8\x05\x71\xbd\x0d\x31\xcc\x61\xae\x7e\x45\x04\xba\x7d\x78\xf7\x5e\xb7\xb5\xf5\x98\x46\x93\x6c\x59\x40\xd7\x92\x8c\x90\x2f\xe8\xb5\xb1\x09\xb2\x53\xb3\x1d\xb5\x53\x9f\x11\xf9\xaf\x92\x8a\x75\x43\xe2\x52\xcf\xb6\xe9\x8f\xc9\x3b\x25\x72\x55\xfb\xf2\xf8\xcd\xeb\xe7\xb1\x9e\x12\x46\xbb\x28\xe2\x8a\x0d\xc1\xb6\xa2\xda\xa5\xa2\x0b\x17\xc6\xf3\x10\xa1\x70\x42\xf8\xf7\xcf\xe1\xab\xaf\xe0\xf3\x47\xfd\x72\x68\x37\xa4\xd5\x51\xc5\x99\x10\x2f\x72\xd5\x4c\xb6\x75\x8c\xfa\x5f\xa7\x76\x5a\x37\x55\x4d\x0d\x66\x17\x27\x9a\x81\xed\x3a\xec\x30\xd5\xd1\x51\xe5\xca\xac\xd1\x6a\x04\x1f\x01\x2c\x92\xdb\xd0\xc4\x69\x51\x37\xc9\xea\x43\xda\x8f\x72\x5c\x33\xec\xd4\x82\x4d\x71\xb8\xdd\x4e\xdc\x4d\xaf\xe2\x8d\xe1\x72\xf5\x61\x47\x8f\x3e\xd7\x97\x12\x8f\xf5\xcb\xef\xba\x2f\x25\x3a\xf5\x23\x5b\xbf\xeb\x69\xb9\x4e\x46\x3c\xee\x20\x3c\x9c\x89\x9d\x85\x71\xd0\x07\xa0\xa9\xa7\x08\x2a\x75\x49\xac\x2d\x1c\xb5\xd5\xb6\x73\x89\x8c\xd7\x40\x08\xbf\xfd\x9f\x9e\xc0\xbb\xf7\x52\x17\xe4\x37\xb8\x2d\x7a\xb8\x23\x75\x75\x67\xb1\xfd\x4b\x8e\x75\x7c\x70\x5f\x22\x9a\x1c\xa9\x16\xf2\x6e\x7c\x76\xd5\xd1\xd0\x7b\xa7\x8f\xd9\x29\xe1\x39\xc7\x38\xdf\x34\x7e\x47\xd7\x0e\x30\xef\xef\x57\x92\xc6\x66\x68\x5d\xb6\x6d\xb5\xef\x37\xfa\xbd\xf5\x68\xca\xff\x94\xca\xb0\x3b\xf6\x9d\x75\x5c\x04\x89\xee\xd0\xeb\xdb\x79\xc7\xb4\xf9\x05\xbd\x0e\xbf\x78\xf4\x68\x0c\x81\xa0\x24\x61\x7c\x69\xaa\x64\x9f\x5d\xc2\x82\xb0\x14\x13\x87\xcf\xae\x82\xad\x52\x69\xe8\xf2\x19\xd5\xd5\xdc\x48\xc3\x61\x90\x30\x0b\xfb\xf6\xce\xaf\xbd\xad\x65\x41\xa1\x36\x4f\x88\x22\x53\x2f\x24\x63\x30\xa0\xf8\x7b\x4d\x5f\xd5\xdb\x96\xaa\x5a\x24\xbb\x8e\x67\x32\x6c\x3e\x16\xc9\xbd\xda\x8f\xbb\xf0\xf1\x31\x4a\xd9\xb3\xc3\x7d\x4d\xfd\xd3\xe2\xfa\x0f\x31\x86\x69\xbd\x83\xfc\xa7\x06\xb9\xc1\x91\x85\xe8\x71\x9e\x58\x7d\x69\xf3\x28\xb6\x68\x0e\xf3\x33\xa2\x47\x74\x0d\x73\xd4\xb9\x64\xec\xe7\x1f\xb6\x02\xb0\xaf\xc9\xe8\xda\x43\x5c\xc6\x39\xf2\x1d\x36\xb7\x52\xa1\x4e\xd3\xd9\x4d\x91\x0b\xa5\x2b\x26\xb3\x3c\x59\x3b\xb7\x7a\xdf\xe7\x09\x4d\x65\x7b\x09\x11\xbf\xe1\x19\x11\x72\x45\xd2\xcd\x06\xa3\x52\x56\xd4\x7d\xf5\xfd\xd0\xd6\x94\xad\x8b\xee\x8b\x94\xcd\xdb\x9c\x3a\xec\x8b\x30\x36\x65\x64\x8c\x99\x31\x1b\x10\x1e\x93\x0e\xde\x5a\x4f\x33\xec\xe4\x04\x58\x1e\x9f\xbd\x7c\xda\x84\x7d\xba\xb5\x36\xf9\xf5\xac\xbd\x5f\x8e\x46\x23\x13\x21\x5a\x7b\x6e\xf8\xde\xa9\x36\x2d\xfe\x18\xe2\x23\xa2\xbd\xab\x72\xe8\xc5\xae\x98\x28\xe9\x82\xe0\x03\x1c\xdc\x53\xd1\x83\x45\xdd\xe9\xe9\xba\x62\xdf\xea\xcb\x86\xd0\xb0\x70\x58\x2f\xe7\xdc\x53\x0c\x3b\x5a\x1d\x9c\x9b\x22\xf1\x47\xf2\x30\x86\x20\xb0\x0e\x77\x07\x3e\xbd\xdd\xea\x1e\xe5\xbe\x7f\xf6\x3a\x82\xfa\x5a\xd0\x7c\x86\x9e\xa2\x42\xb7\xbc\xe1\x3c\x15\x48\x19\x91\x34\xe9\xdc\x10\x9b\x44\xf6\xe5\xec\x17\x3a\x57\x51\x64\x32\x3b\xf8\xc9\xbc\x05\x76\x1f\x39\x6c\xe5\x9a\xdd\xc7\x0b\x7b\x1a\x85\x5a\x11\x5c\xe3\x3a\xbc\x4e\x6c\x33\x6a\x1a\x0e\x18\xca\x41\x63\x69\xfe\xcd\x04\x25\x1f\x46\x75\x46\xe5\xd9\x07\xe7\x87\x75\x35\xfb\x80\xdb\x74\x34\xe8\x36\x2d\xdb\xf0\xb6\x92\xe3\x81\xda\x53\xb6\x01\xc9\xb6\x75\x49\xa3\x9b\x52\x8e\x03\x23\x3c\x84\x8f\x1a\x3a\x87\x58\xef\x03\x0b\x56\x55\xf5\xa0\x61\x62\x66\x8c\xbd\x61\xae\x7f\x5d\xe8\xa9\x85\x77\x75\xfe\xbf\x63\x22\xaa\x2e\x4f\xdb\xf7\x99\xcd\xef\x2e\x92\x5f\x37\x40\xba\x0f\x19\x9a\xcb\xad\xf6\x3d\x91\xb1\x23\x82\xca\x38\x8e\x6b\x6f\x6d\x27\x71\x96\xda\xca\xdc\xa7\xf3\x94\x48\xa9\x01\x9f\x9e\x40\xd8\xdb\x84\xc8\x3e\x88\xda\xca\xca\xdb\x9c\x5c\x2b\x9f\xe3\xe3\x9d\x22\xa6\xf3\x87\x3d\xdd\x77\x6c\xfe\xf7\x68\xc3\x35\xa5\x0e\xb3\x6e\x39\xc9\x9b\x8f\x92\x6b\xcc\x10\x9a\x84\x77\x0c\x2b\x22\xbf\xa3\x6b\x98\xe5\x79\xda\xc4\x3b\xb0\xa3\x3a\xb6\x71\x82\x98\xba\x14\xdb\xa4\xd8\x91\xa3\x3a\x6c\x01\x9f\x58\xe2\xbe\xbd\xb9\x93\x3b\x75\x94\x40\x97\xc2\xc8\x35\x18\x49\x3a\x2a\x61\x64\x74\xd4\x82\x5c\x63\xa2\x64\x3a\xde\x75\x07\x1d\xff\xed\x7d\x4b\x77\x1f\xc1\x4c\xe7\x37\x69\x9a\x5f\x9f\x65\x85\x5a\xeb\x7a\x8e\x6b\x3e\x9a\x57\x83\xf5\x24\xfb\xda\x6f\xff\x3f\x39\x11\xe4\xda\x1f\x73\x76\x0a\x50\x9e\xc8\x3b\x84\x3e\xe7\x60\x0c\xa1\x61\xba\x66\x27\xda\xc5\xbf\x86\xe9\x04\x82\x00\x36\x30\x99\x00\xc5\xfe\xba\xf4\x59\x10\x69\xee\x0c\x73\xb5\xa2\x02\xda\x27\x96\xb2\xeb\x10\x9d\x2b\x06\xfb\x28\xd0\xb5\x02\x55\x55\x0f\x70\x4a\x58\xbd\x34\xbf\x8d\x7b\xda\xb8\x28\x97\x26\xc5\x35\x77\xae\x8d\x1d\xec\x1e\x20\xa7\xf4\x1e\xd6\xf5\xf6\xe1\xeb\x8d\xed\xb7\xa4\x91\x6b\xb3\xfd\x7f\x93\xe3\xb1\xc3\xb7\x5f\x71\x98\xf3\xde\x58\x66\xd8\xbe\xcf\xe8\x1a\x6b\x5f\x9e\x6e\x59\xef\x07\x95\x8d\x01\xdb\xb6\xea\xcd\x65\x52\xfb\xc4\x4e\x6f\xa9\xfb\x0c\xaf\xfb\x00\x0f\xb5\xef\x4e\x0f\xc5\xf6\xfe\x7b\x2a\xa7\xb3\xd9\x6a\xa3\xf7\xad\x08\x43\xa8\xef\x72\x70\x5a\xb4\xad\x74\x7d\xdb\xa8\xba\x10\x6c\x3d\xa5\x73\x18\x74\xde\xf4\x76\xf9\xfc\x5d\x23\x74\x87\xab\xb7\x81\x7b\xb6\xfa\xbb\x06\xdd\xbd\xf0\x0a\x35\x9c\xe6\xa6\xa7\xe5\x36\x32\x79\x8d\x79\xe8\x7e\xc7\xfd\x14\xe4\x7a\x4b\x9f\xad\xa1\xe9\x3e\x12\xbe\xad\xee\x59\x9b\x64\x6f\x61\x60\x28\xc9\xf7\x18\xdc\x9a\x11\x27\x6c\x30\x62\x76\x93\x82\xdf\x9f\xe3\xee\xc5\x76\xbf\xba\x83\x6e\x8c\x0f\xbd\xf4\xdc\x4f\x07\x59\x99\x2a\x16\x18\x3b\xb7\xc7\x0b\xeb\x69\xe3\xc0\xdd\x54\xf9\xf2\xca\x1f\x27\xef\x11\x16\xec\x9a\xea\x0f\x15\xe0\x18\x6c\xb0\xb0\xe7\xa3\xcf\x5d\xef\xb9\x77\x2c\xeb\x79\x59\xeb\x79\xbb\xbd\x75\x14\x74\xa1\xe6\xf6\xf0\xa4\x05\x62\x2f\xd6\x9d\xf4\xe4\x57\x53\x0c\x27\x2c\xd9\xf1\x50\x21\xa1\x8b\xb7\xf5\xbb\x45\xff\xe3\xf8\x8e\x3f\xdf\x0f\xc3\xbb\x61\xf1\xe0\x81\x9e\x52\xf3\xd3\x55\xa4\x9d\xc6\xad\x1e\xec\x14\x78\x3e\x76\x1f\x38\x4b\xfb\x69\x5b\x17\xd7\xc1\x77\xfd\xcd\xa8\x9d\xc6\xf8\xf6\xc7\xc9\xce\x3d\xaf\x2e\xcb\xfd\xb6\xa6\x78\xdb\x16\xbb\x7f\x2d\x83\x51\x57\xff\x8f\x4a\xfc\x9c\xdf\xc5\x62\xef\x21\xcf\x2d\xf9\xd4\x1e\xcf\xcd\xbd\x1e\xc7\xfb\x87\xde\xf6\xd7\x64\x02\x57\x2c\x9b\xc2\x42\x9d\x2c\xf3\xd1\x7f\x02\x00\x00\xff\xff\xff\xcc\x62\x62\x69\x42\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17001, mode: os.FileMode(420), modTime: time.Unix(1508519329, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/config.gotmpl": templatesConfigGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"config.gotmpl": &bintree{templatesConfigGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

